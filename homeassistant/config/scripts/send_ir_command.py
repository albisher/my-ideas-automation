#!/usr/bin/env python3
"""
Xiaomi IR Send Command Script
This script sends IR commands directly to the Xiaomi device
"""

import socket
import sys
import time

def send_ir_command(command):
    """Send IR command to Xiaomi device"""
    
    # Device IP
    device_ip = "192.168.68.68"
    device_port = 54321
    
    print(f"Sending IR command '{command}' to {device_ip}:{device_port}")
    
    # Map commands to IR codes (placeholder hex data)
    ir_codes = {
        'hisense_tv_power': b'\x21\x31\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01',
        'hisense_tv_volume_up': b'\x21\x31\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02',
        'hisense_tv_volume_down': b'\x21\x31\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03',
        'hisense_tv_channel_up': b'\x21\x31\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04',
        'hisense_tv_channel_down': b'\x21\x31\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05',
        'hisense_tv_input': b'\x21\x31\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x06',
        'hisense_tv_menu': b'\x21\x31\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07',
        'hisense_tv_back': b'\x21\x31\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08',
        'hisense_tv_ok': b'\x21\x31\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x09',
        'hisense_tv_up': b'\x21\x31\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0a',
        'hisense_tv_down': b'\x21\x31\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0b',
        'hisense_tv_left': b'\x21\x31\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0c',
        'hisense_tv_right': b'\x21\x31\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0d'
    }
    
    try:
        # Create UDP socket
        sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        sock.settimeout(5)
        
        # Send the command
        if command in ir_codes:
            sock.sendto(ir_codes[command], (device_ip, device_port))
            print(f"Sent IR command: {command}")
            
            # Try to get response
            try:
                data, addr = sock.recvfrom(1024)
                print(f"Received response from {addr}: {data.hex()}")
            except socket.timeout:
                print("No response from device (this is normal for IR commands)")
        else:
            print(f"Unknown command: {command}")
            return False
        
        sock.close()
        print("IR command sent successfully")
        return True
        
    except Exception as e:
        print(f"Error sending IR command: {e}")
        return False

if __name__ == "__main__":
    if len(sys.argv) > 1:
        command = sys.argv[1]
        success = send_ir_command(command)
        sys.exit(0 if success else 1)
    else:
        print("Usage: python3 send_ir_command.py <command>")
        sys.exit(1)
