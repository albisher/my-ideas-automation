#!/usr/bin/env python3
"""
Test Xiaomi IR Commands
This script tests the IR commands directly without Home Assistant
"""

import socket
import struct
import time

def test_ir_commands():
    """Test IR commands on Xiaomi device"""
    ip = '192.168.68.62'
    print(f'Testing IR commands on {ip}...')
    
    try:
        # Create UDP socket
        sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        sock.settimeout(5)
        
        # IR command codes
        ir_commands = {
            'hisense_tv_power': b'\x21\x31\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01',
            'hisense_tv_volume_up': b'\x21\x31\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02',
            'hisense_tv_volume_down': b'\x21\x31\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03',
            'hisense_tv_channel_up': b'\x21\x31\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04',
            'hisense_tv_channel_down': b'\x21\x31\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05',
            'hisense_tv_input': b'\x21\x31\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x06',
            'hisense_tv_menu': b'\x21\x31\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07',
            'hisense_tv_back': b'\x21\x31\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08',
            'hisense_tv_ok': b'\x21\x31\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x09',
            'hisense_tv_up': b'\x21\x31\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0a',
            'hisense_tv_down': b'\x21\x31\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0b',
            'hisense_tv_left': b'\x21\x31\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0c',
            'hisense_tv_right': b'\x21\x31\x00\x20\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0d'
        }
        
        # Test each command
        for command_name, command_data in ir_commands.items():
            print(f'Testing {command_name}...')
            
            try:
                # Send the command
                sock.sendto(command_data, (ip, 54321))
                print(f'  Sent: {command_data.hex()}')
                
                # Try to get response
                try:
                    data, addr = sock.recvfrom(1024)
                    print(f'  Received response from {addr}: {data.hex()}')
                except socket.timeout:
                    print('  No response (this is normal)')
                
                # Small delay between commands
                time.sleep(0.5)
                
            except Exception as e:
                print(f'  Error sending {command_name}: {e}')
        
        sock.close()
        print('IR command testing completed!')
        print('Check if your Hisense TV responded to any of the commands')
        
    except Exception as e:
        print(f'IR command testing error: {e}')

if __name__ == "__main__":
    test_ir_commands()
